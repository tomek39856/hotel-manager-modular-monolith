buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

plugins {
   // id 'org.springframework.boot' version '2.0.3.RELEASE'
 //   id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

logging.captureStandardOutput LogLevel.INFO

group = 'com.github.tomek39856'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

compileJava.options.compilerArgs.add '-parameters'
compileTestJava.options.compilerArgs.add '-parameters'

task npmInstall(type: Exec) {
    workingDir 'web'
    commandLine 'npm.cmd', 'install'
}

task npmBuildFrontend(type: Exec) {
    inputs.dir('web/src')
    inputs.file('web/package.json')
    outputs.dir('web/dist')

    workingDir 'web'
    commandLine 'npm.cmd', 'run', 'build'

    doLast {
        print("frontend build finished ")
    }
}

task copyFrontendToResources(type: Copy) {
    from 'web/dist/hotel-manager-web'
    into 'build/resources/main/static'
}

npmBuildFrontend.dependsOn(npmInstall)
copyFrontendToResources.dependsOn(npmBuildFrontend)
processResources.dependsOn(copyFrontendToResources)


repositories {
    mavenLocal()
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}